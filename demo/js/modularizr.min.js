var modularizr=function(){"use strict";var e={},o={};return e.register=function(e,s){if(o[e])throw{code:1,name:"Error",description:"Module already exists",message:"A module with name '"+e+"' has already been registered",toString:function(){return this.name+": "+this.message}};o[e]=s},e.make=function(){var e={publicMethods:{},protectedMethods:{}},s=Array.prototype.slice.call(arguments);return s.forEach(function(s){if(!o[s])throw{code:2,name:"Error",description:"Module doesn't exist",message:"Module with name '"+name+"' hasn't been registered yet",toString:function(){return this.name+": "+this.message}};e=o[s](e.publicMethods,e.protectedMethods)}),e.publicMethods},e}();modularizr.register("module1",function(e,o){"use strict";var s="Private property";return o.property1="Protected module1's properties",o.method1=function(){console.log("I'm a protected module1's method"),console.log("I'm visible to module1 and module2's methods"),console.log("I can access "+s),console.log("I can access "+o.property1),console.log("I can access "+e.property1),console.log("I can access "+o.property2),console.log("I can access "+e.property2)},e.property1="Public module1's properties",e.method1=function(){console.log("I'm a public module1's method"),console.log("I'm visible to everyone can access the outer object, in addition to module1 and module2's methods"),console.log("I can access "+s),console.log("I can access "+o.property1),console.log("I can access "+e.property1),console.log("I can access "+o.property2),console.log("I can access "+e.property2)},{publicMethods:e,protectedMethods:o}}),modularizr.register("module2",function(e,o){"use strict";return o.property2="Protected module2's properties",o.method2=function(){console.log("I'm a protected module2's method"),console.log("I'm visible to module1 and module2's methods"),console.log("I can access "+property1),console.log("I can access "+o.property1),console.log("I can access "+e.property1),console.log("I can access "+o.property2),console.log("I can access "+e.property2)},e.property2="Public module2's properties",e.method2=function(){console.log("I'm a public module2's method"),console.log("I'm visible to everyone can access the outer object, in addition to module1 and module2's methods"),console.log("I can access "+property1),console.log("I can access "+o.property1),console.log("I can access "+e.property1),console.log("I can access "+o.property2),console.log("I can access "+e.property2)},{publicMethods:e,protectedMethods:o}});var myModularizr=modularizr.make("module1","module2"),modularizr=function(){"use strict";var e={},o={};return e.register=function(e,s){if(o[e])throw{code:1,name:"Error",description:"Module already exists",message:"A module with name '"+e+"' has already been registered",toString:function(){return this.name+": "+this.message}};o[e]=s},e.make=function(){var e={publicMethods:{},protectedMethods:{}},s=Array.prototype.slice.call(arguments);return s.forEach(function(s){if(!o[s])throw{code:2,name:"Error",description:"Module doesn't exist",message:"Module with name '"+name+"' hasn't been registered yet",toString:function(){return this.name+": "+this.message}};e=o[s](e.publicMethods,e.protectedMethods)}),e.publicMethods},e}();modularizr.register("module1",function(e,o){"use strict";var s="Private property";return o.property1="Protected module1's properties",o.method1=function(){console.log("I'm a protected module1's method"),console.log("I'm visible to module1 and module2's methods"),console.log("I can access "+s),console.log("I can access "+o.property1),console.log("I can access "+e.property1),console.log("I can access "+o.property2),console.log("I can access "+e.property2)},e.property1="Public module1's properties",e.method1=function(){console.log("I'm a public module1's method"),console.log("I'm visible to everyone can access the outer object, in addition to module1 and module2's methods"),console.log("I can access "+s),console.log("I can access "+o.property1),console.log("I can access "+e.property1),console.log("I can access "+o.property2),console.log("I can access "+e.property2)},{publicMethods:e,protectedMethods:o}}),modularizr.register("module2",function(e,o){"use strict";return o.property2="Protected module2's properties",o.method2=function(){console.log("I'm a protected module2's method"),console.log("I'm visible to module1 and module2's methods"),console.log("I can access "+property1),console.log("I can access "+o.property1),console.log("I can access "+e.property1),console.log("I can access "+o.property2),console.log("I can access "+e.property2)},e.property2="Public module2's properties",e.method2=function(){console.log("I'm a public module2's method"),console.log("I'm visible to everyone can access the outer object, in addition to module1 and module2's methods"),console.log("I can access "+property1),console.log("I can access "+o.property1),console.log("I can access "+e.property1),console.log("I can access "+o.property2),console.log("I can access "+e.property2)},{publicMethods:e,protectedMethods:o}});var myModularizr=modularizr.make("module1","module2");